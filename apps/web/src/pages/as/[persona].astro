---
import { RootContainer, PersonaCard, Aside, Main } from '@richardblondet.com/ui';
import ProfileCard from '../../components/ProfileCard';
import StyleGuideLayout from '../../layouts/styleguide.astro';
import type { PersonaModel, PostModel } from '../../../../../content/config';
import PostListFormat from '../../components/PostListFormat';

const personasEntries = await Astro.glob('../../../../../content/personas/*.mdx');
const personas = personasEntries.map(({frontmatter}) => ({ ...frontmatter }));

const postsEntries = await Astro.glob('../../../../../content/posts/**/*.mdx');

export const getStaticPaths = async () => {
  const personasEntries = await Astro.glob<PersonaModel>('../../../../../content/personas/*.mdx');
  // console.log("ðŸš€ ~ file: [persona].astro:11 ~ getStaticPaths ~ personasEntries:", personasEntries)

  return personasEntries.map((per) => ({
    params: { 
      persona: per.frontmatter.slug 
    },
    props: { 
      persona: {
        ...per.frontmatter, 
        Content: per.Content 
      }
    }
  }));
};

type PostSourceFunctions = {
  [key in PersonaModel['contentSource']]: (selectedPersona: string) => Promise<PostModel[]>;
};

const getPersonaPosts: PostSourceFunctions = {
  'astro.glob': async (selectedPersona) => {
    return [] as PostModel[];
  },
  'astro.collection': async () => {
    return [] as PostModel[];
    // throw new Error('Astro Collection Source Function Not Implemented');
  },
};

const { persona:selectedPersona } = Astro.params;
// console.log("ðŸš€ ~ file: [persona].astro:27 ~ selectedPersona:", selectedPersona)

const { persona } = Astro.props;
const posts = postsEntries
  .filter(({ frontmatter }) => selectedPersona === frontmatter.persona)
  .map(({ frontmatter }) => ({ ...frontmatter }));
console.log("ðŸš€ ~ file: [persona].astro:49 ~ posts:", postsEntries)

---
<StyleGuideLayout>
  <RootContainer>
    <Aside>
      <ProfileCard 
        personasList={personas as PersonaModel[]} 
        selectedPersona={selectedPersona as string} 
        client:load
      />
    </Aside>
    <Main>
      <PostListFormat {...persona} posts={posts} />
    </Main>
  </RootContainer>
</StyleGuideLayout>